/* TODO: Scade and language-scade don't agree
  on precedence of -> or pre:
   Expression: 0 -> pre c + if x then 1 else 0
   Scade: 0 -> ((pre c) + (if x then 1 else 0))
   language-scade: 0 -> pre (c + if x then 1 else 0)
*/
node Count(x : bool; reset : bool)
returns (c : int)
let
  c = if not reset
      then 0 -> pre c +
        if x then 1 else 0
      else 0;
tel

/* Properties:
always(reset implies next (c = 0))
always(x implies exists lc = c: next (c = lc + 1 or c = lc));
*/
