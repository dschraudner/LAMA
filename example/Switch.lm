nodes
  node Switch(on, off: bool) returns (so: bool);
  let
    local
      s : bool;
    state
      s_1 : bool;
    definition
      s = (ite s_1 (not off) on);
      so = s;
    transition
      s_1' = s;
    initial s_1 = false;
  tel
local on, off, s : bool;
state s_1 : bool;
definition s = (use Switch on off);
transition
  s_1' = s;
initial s_1 = false;
invariant
  (and
    (and
      (=> (and on (not off)) s)
--      (=> on s) -- use this instead of the above to provoce error
      (=> (and off (not on)) (not s)))
    (=> (and (not off) (not on)) (= s s_1)));
