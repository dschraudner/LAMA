#!/bin/bash

# Rewrite files generated by bnfc to use lazy bytestrings in the lexer and parser
# and strict bytestrings for the data types.

# set -x
dirname="./Lang/LAMA"
files="Lex.x Par.y"

echo "Rewrite to lazy bytestring"

for f in $files ; do
    cat "${dirname}/$f" | sed 's/import qualified Data.ByteString.Char8 as BS/import qualified Data.ByteString.Lazy.Char8 as BS/' \
        > "${dirname}/${f}.new"
done

cat "${dirname}/Lex.x.new" | sed 's/BS.take len/BS.take (toEnum len)/' \
    | sed 's/import qualified Data.ByteString.Lazy.Char8 as BS/import qualified Data.ByteString.Lazy.Char8 as BS\nimport qualified Data.ByteString.Char8 as B/' \
    | sed 's/mkPosToken t@(PT p _) = (posLineCol p, prToken t)$/mkPosToken t@(PT p _) = (posLineCol p, toStrict $ prToken t)\ntoStrict :: BS.ByteString -> B.ByteString\ntoStrict = B.concat . BS.toChunks/' \
    > "${dirname}/Lex.x.new2"
mv "${dirname}/Lex.x.new2" "${dirname}/Lex.x.new"

cat "${dirname}/Test.hs" \
    | sed 's/import System ( getArgs, getProgName )/import System ( getArgs, getProgName )\nimport qualified Data.ByteString.Lazy.Char8 as BS/' \
    | sed 's/run :: \(.*\) -> String -> \(.*\)/run :: \1 -> BS.ByteString -> \2/' \
    | sed 's/readFile f/BS.readFile f/' \
    | sed 's/hGetContents stdin/BS.hGetContents stdin/' \
    > "${dirname}/Test.hs.new"
mv "${dirname}/Test.hs.new" "${dirname}/Test.hs"
    
for f in $files ; do
    mv "${dirname}/${f}.new" "${dirname}/$f"
done
